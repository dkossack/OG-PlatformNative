/**
 * Copyright (C) 2009 - present by OpenGamma Inc. and the OpenGamma group of companies
 *
 * Please see distribution for license.
 */

namespace com.opengamma.language.connector {

  /**
   * Test message for the unit tests.
   */
  message Test extends UserMessagePayload {
  
    enum Operation {
      ECHO_REQUEST;     // must respond with ECHO_RESPONSE
      ECHO_REQUEST_A;   // must respond with ECHO_RESPONSE_A asynchronously and ECHO_RESPONSE synchronously
      ECHO_RESPONSE; 
      ECHO_RESPONSE_A;
      VOID_REQUEST;     // asynchronous call - no action needed
      VOID_REQUEST_A;   // must respond with VOID_RESPONSE_A asynchronously
      VOID_RESPONSE_A;
      CRASH_REQUEST;    // must abend the JVM somehow, after registering a stash message
      PAUSE_REQUEST;    // must pause the JVM somehow so the heartbeat fails
      STASH_REQUEST;    // must assert that it received the expected stash message, and respond with STASH_RESPONSE
      STASH_RESPONSE; 
    }
    
    required Operation operation = 1;
    required int nonce = 2;           // the nonce value in a response must match that of the request
    
    binding Java {
      body  "public <T1,T2> T1 accept (final UserMessagePayloadVisitor<T1,T2> visitor, final T2 data) throws com.opengamma.util.async.AsynchronousExecution { return visitor.visitTest (this, data); }";
    }
  
  }

}