<!--
  Copyright (C) 2012 - present by OpenGamma Inc. and the OpenGamma group of companies

  Please see distribution for license.
-->
<project name="advanced-installer">

  <!--
    Utility tasks and macros for working with the Advanced Installer product.
  -->

  <property file="${common.dir}/advanced-installer.properties" />

  <!--
    ai-enable:
        Enables a feature for a build. This modifies the installer project file
        and does not check whether the feature is already enabled. You should
        take a copy of the original build file and enable features on the copy.

        feature-id  the identifier of the feature to enable
        build-id    the identifier of the build to enable it for, or multiple
                    identifiers separated by semi-colons, defaults to
                    ai.build.all
        file        the path to the project file, defaults to ai.build.file
  -->
  <macrodef name="ai-enable">
    <attribute name="feature-id" />
    <attribute name="build-id" default="${ai.build.all}" />
    <attribute name="file" default="${ai.build.file}" />
    <sequential>
      <echo message="Enabling @{feature-id} for build @{build-id}" />
      <replaceregexp file="@{file}" match="(&lt;row feature=&quot;@{feature-id}&quot;.*?builds=&quot;)" replace="\1@{build-id};" flags="mi" />
    </sequential>
  </macrodef>

  <!--
    ai-disable:
        Disables parts of a feature that would cause the build to fail. For
        example a feature may include a merge module. The feature might be
        disabled in a build, but a missing MSM will cause the build to fail.
        This modifies the installer project file. You should take a copy of
        the original build file and disable features on the copy.

        feature-id  the identifier of the feature to disable
        file        the path to the project file, defaults to ai.build.file
  -->
  <macrodef name="ai-disable">
    <attribute name="feature-id" />
    <attribute name="file" default="${ai.build.file}" />
    <sequential>
      <echo message="Disabling @{feature-id}" />
      <replaceregexp file="@{file}" match="&lt;row module=.*?feature=&quot;@{feature-id}&quot;.*?&gt;" replace="" flags="mi" />
    </sequential>
  </macrodef>

  <!--
    ai-build:
        Produces a build of the installer.

        build-id  the identifier of the build, or multiple identifiers separated
                  by semi-colons, defaults to ai.build.all
        file      the path to the project file, defaults to ai.build.file
        dir       directory to execute in (all resources taken relative to this)
  -->
  <macrodef name="ai-build">
    <attribute name="build-id" default="${ai.build.all}" />
    <attribute name="file" default="${ai.build.file}" />
    <attribute name="dir" default="." />
    <sequential>
      <echo message="Building @{build-id}" />
      <exec executable="${ai.command}" dir="@{dir}" failonerror="true">
        <arg value="/build" />
        <arg value="@{file}" />
        <arg value="-buildslist" />
        <arg value="@{build-id}" />
      </exec>
    </sequential>
  </macrodef>

  <!--
    ai-set-version:
        Sets the version number within the installer project file.

        version  the version number to set
        file     the path to the project file, defaults to ai.build.file
  -->
  <macrodef name="ai-set-version">
    <attribute name="version" />
    <attribute name="file" default="${ai.build.file}" />
    <sequential>
      <echo message="Setting version number to @{version}" />
      <exec executable="${ai.command}">
        <arg value="/edit" />
        <arg value="@{file}" />
        <arg value="/SetVersion" />
        <arg value="@{version}" />
      </exec>
    </sequential>
  </macrodef>

  <!--
    ai-present:
        Checks whether Advanced Installer is available. If it is, the ai.present
        property is set. If it is not, the property is not set. If the AI tools
        are not available the build will only fail if ai.required is set
        otherwise a message is printed.
  -->
  <target name="ai-present-check" unless="ai.present">
    <condition property="ai.command.failifexecutionfails" value="true" else="false">
      <isset property="ai.required" />
    </condition>
    <exec executable="${ai.command}" outputproperty="ai.present" failifexecutionfails="${ai.command.failifexecutionfails}">
      <arg value="/?" />
    </exec>
  </target>
  <target name="ai-present" depends="ai-present-check" unless="ai.present">
    <echo>Advanced Installer is not available. No Windows or MAC installation artifacts will be produced.</echo>
  </target>

</project>
